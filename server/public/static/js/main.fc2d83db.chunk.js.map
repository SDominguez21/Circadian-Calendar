{"version":3,"sources":["shooting_star.png","moon.png","umbrella.png","components/navbar/Navbar.js","components/today/Today.js","components/signup/Signup.js","components/login/Login.js","components/all-calendar/AllCalendar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","react_default","a","createElement","theUser","react_router_dom","to","style","textDecoration","margin","onClick","toggleForm","pleaseLogOut","username","Today","state","cosmicShowing","moonShowing","weatherShowing","handleClickCosmic","_this","setState","handleClickMoon","handleClickWeather","console","log","this","className","firstCosmic","name","src","require","firstMoon","weatherInfo","firstWeather","weather","Component","Signup","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","defineProperty","target","value","tryToSignUp","preventDefault","uName","usernameInput","pWord","passwordInput","axios","post","password","withCredentials","then","getUser","onSubmit","onChange","type","Login","tryToLogin","AllCalendar","sanitizedWeatherEvents","weatherEvents","map","wEvent","oneWeather","date","dateTimeISO","title","sanitizedMoonEvents","moonEvents","mEvent","oneMoon","sanitizedCosmicEvents","cosmicEvents","cEvent","oneCosmic","allSanitizedEvents","concat","toConsumableArray","main_esm","defaultView","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","weekends","header","left","center","right","events","App","currentlyLoggedIn","ready","signupShowing","loginShowing","cosmicInfo","moonInfo","month","_callee","result","regenerator_default","wrap","_context","prev","next","get","sent","abrupt","data","stop","getCurrentlyLoggedInUser","response","catch","whichForm","theForm","logout","err","apiResults","cosmic","moon","_this2","navbar_Navbar","signup_Signup","login_Login","react_router","exact","path","render","Today_Today","Home_default","AllCalendar_AllCalendar","React","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"6KAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2RCsCzBC,MAnCf,SAAgBC,GAKd,OACEC,EAAAC,EAAAC,cAAA,WACGH,EAAMI,SACLH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIC,MAAO,CAAEC,eAAgB,OAAQC,OAAQ,SAAtD,UAKAT,EAAMI,SACNH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,UAAQO,QAAS,kBAAMV,EAAMW,WAAW,WAAxC,WACAV,EAAAC,EAAAC,cAAA,UAAQO,QAAS,kBAAMV,EAAMW,WAAW,YAAxC,YAIHX,EAAMI,SACLH,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAII,QAtBH,WAClBV,EAAMY,iBAqBE,YAKFX,EAAAC,EAAAC,cAAA,sBAAcH,EAAMI,QAAQS,aC1BjBC,oNACnBC,MAAQ,CACNC,eAAe,EACfC,aAAa,EACbC,gBAAgB,KAIlBC,kBAAoB,WAClBC,EAAKC,SAAS,CACZL,eAAgBI,EAAKL,MAAMC,mBAI/BM,gBAAkB,WAChBF,EAAKC,SAAS,CACZJ,aAAcG,EAAKL,MAAME,iBAI7BM,mBAAqB,WACnBH,EAAKC,SAAS,CACZH,gBAAiBE,EAAKL,MAAMG,qGAK9BM,QAAQC,IAAIC,KAAK1B,wCAUjB,OADAwB,QAAQC,IAAI,kBAAmBC,KAAK1B,OAElCC,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,mBACb1B,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,oBAGf1B,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,oBACZD,KAAKX,MAAMC,cACVf,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,cAAcjB,QAASgB,KAAKP,mBACzClB,EAAAC,EAAAC,cAAA,SAAIuB,KAAK1B,MAAM4B,YAAYC,OAK7B5B,EAAAC,EAAAC,cAAA,OACE2B,IAAKC,EAAQ,IACbrB,QAASgB,KAAKP,qBAMpBlB,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,kBACZD,KAAKX,MAAME,YACVhB,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,cAAcjB,QAASgB,KAAKJ,iBACzCrB,EAAAC,EAAAC,cAAA,SAAIuB,KAAK1B,MAAMgC,UAAUH,OAI3B5B,EAAAC,EAAAC,cAAA,OACEwB,UAAU,OACVG,IAAKC,EAAQ,IACbrB,QAASgB,KAAKJ,mBAMpBrB,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,qBACZH,QAAQC,IAAIC,KAAKX,MAAMkB,aACvBP,KAAKX,MAAMG,eACVjB,EAAAC,EAAAC,cAAA,OAAKwB,UAAU,cAAcjB,QAASgB,KAAKH,oBACzCtB,EAAAC,EAAAC,cAAA,SAAIuB,KAAK1B,MAAMkC,aAAaC,UAI9BlC,EAAAC,EAAAC,cAAA,OACE2B,IAAKC,EAAQ,IACbrB,QAASgB,KAAKH,sBAIpBtB,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,iBAAT,oBAxF2B8B,cCyDpBC,cA1Db,SAAAA,EAAYrC,GAAM,IAAAoB,EAAA,OAAAkB,OAAAC,EAAA,EAAAD,CAAAZ,KAAAW,IAChBjB,EAAAkB,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAhB,KAAM1B,KAIR2C,aAAe,SAACC,GACZxB,EAAKC,SAALiB,OAAAO,EAAA,EAAAP,CAAA,GAAgBM,EAAEE,OAAOjB,KAAOe,EAAEE,OAAOC,SAN3B3B,EAWlB4B,YAAc,SAACJ,GACXA,EAAEK,iBACF,IAAMC,EAAQ9B,EAAKL,MAAMoC,cACnBC,EAAQhC,EAAKL,MAAMsC,cAEzBC,IAAMC,KAAK,wCAAyC,CAClD1C,SAAUqC,EACVM,SAAUJ,GACT,CAACK,iBAAiB,IACtBC,KAAK,WACJtC,EAAKpB,MAAM2D,UACTvC,EAAKpB,MAAMW,WAAW,aApB1BS,EAAKL,MAAQ,CAAEoC,cAAe,GAAIE,cAAe,IAFjCjC,wEA+BhB,OADAI,QAAQC,IAAIC,KAAKX,OAEfd,EAAAC,EAAAC,cAAA,QAAMyD,SAAYlC,KAAKsB,aAEnB/C,EAAAC,EAAAC,cAAA,qBAEAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAO4C,MAAOrB,KAAKX,MAAMoC,cACvBtB,KAAK,gBACLgC,SAAUnC,KAAKiB,eAGjB1C,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAO4C,MAAOrB,KAAKX,MAAMsC,cACvBxB,KAAK,gBACLiC,KAAK,WACLD,SAAUnC,KAAKiB,eAKnB1C,EAAAC,EAAAC,cAAA,gCApDaiC,aCuDN2B,cAtDb,SAAAA,EAAY/D,GAAM,IAAAoB,EAAA,OAAAkB,OAAAC,EAAA,EAAAD,CAAAZ,KAAAqC,IAChB3C,EAAAkB,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAyB,GAAArB,KAAAhB,KAAM1B,KAIR2C,aAAe,SAACC,GACZxB,EAAKC,SAALiB,OAAAO,EAAA,EAAAP,CAAA,GAAgBM,EAAEE,OAAOjB,KAAOe,EAAEE,OAAOC,SAN3B3B,EASlB4C,WAAa,SAACpB,GACVA,EAAEK,iBACF,IAAMC,EAAQ9B,EAAKL,MAAMoC,cACnBC,EAAQhC,EAAKL,MAAMsC,cAEzBC,IAAMC,KAAK,uCAAwC,CACjD1C,SAAUqC,EACVM,SAAUJ,GACT,CAACK,iBAAiB,IACpBC,KAAK,WACJtC,EAAKpB,MAAM2D,UACXvC,EAAKpB,MAAMW,WAAW,YAlB1BS,EAAKL,MAAQ,CAAEoC,cAAe,GAAIE,cAAe,IAFjCjC,wEA4BhB,OACEnB,EAAAC,EAAAC,cAAA,QAAMyD,SAAYlC,KAAKsC,YAEnB/D,EAAAC,EAAAC,cAAA,mBAEAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAO4C,MAAOrB,KAAKX,MAAMoC,cACvBtB,KAAK,gBACLgC,SAAUnC,KAAKiB,eAGjB1C,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAO4C,MAAOrB,KAAKX,MAAMsC,cACvBxB,KAAK,gBACLgC,SAAUnC,KAAKiB,eAKnB1C,EAAAC,EAAAC,cAAA,gCAhDYiC,gFCKC6B,gMAIjB,IAAMC,EAAyBxC,KAAK1B,MAAMmE,cAAcC,IAAI,SAAAC,GAC1D,IAAIC,EAAa,GAKjB,OAFAA,EAAWC,KAAOF,EAAOG,YACzBF,EAAWG,MAAQJ,EAAOlC,QACnBmC,IAGHI,EAAsBhD,KAAK1B,MAAM2E,WAAWP,IAAI,SAAAQ,GACpD,IAAIC,EAAU,GAGd,OAFAA,EAAQN,KAAOK,EAAOJ,YACtBK,EAAQJ,MAAQG,EAAO/C,KAChBgD,IAGHC,EAAwBpD,KAAK1B,MAAM+E,aAAaX,IAAI,SAAAY,GACxD,IAAIC,EAAY,GAGhB,OAFAA,EAAUV,KAAOS,EAAOT,KACxBU,EAAUpD,KAAOmD,EAAOnD,KACjBoD,IAGHC,EAAkB,GAAAC,OAAA7C,OAAA8C,EAAA,EAAA9C,CACnB4B,GADmB5B,OAAA8C,EAAA,EAAA9C,CAEnBoC,GAFmBpC,OAAA8C,EAAA,EAAA9C,CAGnBwC,IAmBL,OAjBAtD,QAAQC,IAAI,OAAQyD,GAkBlBjF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkF,EAAA,EAAD,CACEC,YAAY,eACZC,QAAS,CAACC,IAAeC,IAAgBC,KAEzCC,UAAU,EACVC,OAAQ,CACNC,KAAM,kBACNC,OAAQ,QACRC,MAAO,kDAKTC,OAAQd,YAhEuB9C,cCqM1B6D,oNArLblF,MAAQ,CACNmF,kBAAmB,KACnBC,OAAO,EACPC,eAAe,EACfC,cAAc,EACdC,WAAY,GACZC,SAAU,GACVtE,YAAa,MAGfuE,2BAAQ,SAAAC,IAAA,IAAAC,EAAA,OAAAC,EAAAzG,EAAA0G,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACazD,IAAM0D,IAAI,0CADvB,cACFN,EADEG,EAAAI,KAAAJ,EAAAK,OAAA,SAECR,EAAOS,MAFR,wBAAAN,EAAAO,SAAAX,QAMRY,yBAA2B,WACzB7F,QAAQC,IAAI,qBACZ6B,IACG0D,IAAI,gDAAiD,CACpDvD,iBAAiB,IAElBC,KAAK,SAAA4D,GACJ9F,QAAQC,IAAI,oCACZ,IAAIrB,EAAUkH,EAASH,KAEvB,OADA/F,EAAKC,SAAS,CAAE6E,kBAAmB9F,EAAS+F,OAAO,IAC5C/F,IAERmH,MAAM,WACLnG,EAAKC,SAAS,CAAE6E,kBAAmB,YAIzCvF,WAAa,SAAA6G,GACX,IAAIC,EAGFA,EADgB,WAAdD,EACQ,gBAEA,eAGZpG,EAAKC,SAALiB,OAAAO,EAAA,EAAAP,CAAA,GAAiBmF,GAAWrG,EAAKL,MAAM0G,QAezCC,OAAS,WACPpE,IACGC,KACC,wCACA,GACA,CAAEE,iBAAiB,IAEpBC,KAAK,SAAA4D,GACJ9F,QAAQC,IAAI6F,GACZlG,EAAKiG,6BAENE,MAAM,SAAAI,GACLnG,QAAQC,IAAIkG,uNAvBOjG,KAAK8E,eAAxBoB,SACJpG,QAAQC,IAAI,cAAemG,GAC3BlG,KAAKL,SAAS,CACZiF,WAAYsB,EAAWC,OACvBtB,SAAUqB,EAAWE,KACrB7F,YAAa2F,EAAWzF,UAG1BT,KAAK2F,8JAqBE,IAAAU,EAAArG,KAGP,OAFAF,QAAQC,IAAI,gBAAiBC,KAAKX,OAGhCd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6H,EAAD,CACE5H,QAASsB,KAAKX,MAAMmF,kBACpBtF,aAAcc,KAAKgG,OACnB/G,WAAYe,KAAKf,WACjBgD,QAASjC,KAAK2F,2BAGf3F,KAAKX,MAAMqF,eACVnG,EAAAC,EAAAC,cAAC8H,EAAD,CACEtE,QAASjC,KAAK2F,yBACd1G,WAAYe,KAAKf,aAIpBe,KAAKX,MAAMsF,cACVpG,EAAAC,EAAAC,cAAC+H,EAAD,CACEvE,QAASjC,KAAK2F,yBACd1G,WAAYe,KAAKf,cAIvBV,EAAAC,EAAAC,cAACgI,EAAA,EAAD,KACElI,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,IACLC,OAAQ,SAAAtI,GAAK,OACXC,EAAAC,EAAAC,cAACoI,EAAD,CACE3G,YAAamG,EAAKhH,MAAMuF,WAAW,GACnCtE,UAAW+F,EAAKhH,MAAMwF,SAAS,GAC/BrE,aAAc6F,EAAKhH,MAAMkB,YAAY,GACrCkE,MAAO4B,EAAKhH,MAAMoF,WAKxBlG,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,QACLC,OAAQ,SAAAtI,GAAK,OACXC,EAAAC,EAAAC,cAACqI,EAAAtI,EAAD,CAEEiG,MAAO4B,EAAKhH,MAAMoF,MAClB/F,QAAS2H,EAAKhH,MAAMmF,uBAsC1BjG,EAAAC,EAAAC,cAACgI,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,gBACLC,OAAQ,kBACNrI,EAAAC,EAAAC,cAACsI,EAAD,CACEvC,kBAAmB6B,EAAKhH,MAAMmF,kBAC9B/B,cAAe4D,EAAKhH,MAAMkB,YAC1B0C,WAAYoD,EAAKhH,MAAMwF,SACvBxB,aAAcgD,EAAKhH,MAAMuF,WACzBH,MAAO4B,EAAKhH,MAAMoF,MAClB/F,QAAS2H,EAAKhH,MAAMmF,gCA5KlBwC,IAAMtG,YCXJuG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASV,OACPrI,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAC8I,EAAD,OAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAclD,MAAMzC,KAAK,SAAA4F,GACjCA,EAAaC","file":"static/js/main.fc2d83db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shooting_star.640ecd65.png\";","module.exports = __webpack_public_path__ + \"static/media/moon.c3d8c7af.png\";","module.exports = __webpack_public_path__ + \"static/media/umbrella.34bc96c8.png\";","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\nfunction Navbar(props) {\n  const doTheLogout = () => {\n    props.pleaseLogOut();\n  };\n\n  return (\n    <nav>\n      {props.theUser && (\n        <Link to=\"/\" style={{ textDecoration: 'none', margin: '10px' }}>\n          Today\n        </Link>\n      )}\n\n      {!props.theUser && (\n        <span>\n          <button onClick={() => props.toggleForm('login')}> Login </button>\n          <button onClick={() => props.toggleForm('signup')}>Sign Up</button>\n        </span>\n      )}\n\n      {props.theUser && (\n        <span>\n          <button>\n            <Link to=\"/\" onClick={doTheLogout}>\n              Log Out\n            </Link>\n          </button>\n\n          <span>Hello, {props.theUser.username}</span>\n        </span>\n      )}\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './today.css';\n\nexport default class Today extends Component {\n  state = {\n    cosmicShowing: false,\n    moonShowing: false,\n    weatherShowing: false\n  };\n\n  // on toggle show info functions NOT DRY\n  handleClickCosmic = () => {\n    this.setState({\n      cosmicShowing: !this.state.cosmicShowing\n    });\n  };\n\n  handleClickMoon = () => {\n    this.setState({\n      moonShowing: !this.state.moonShowing\n    });\n  };\n\n  handleClickWeather = () => {\n    this.setState({\n      weatherShowing: !this.state.weatherShowing\n    });\n  };\n\n  componentDidMount() {\n    console.log(this.props);\n    // this.setState({\n    //   cosmicInfo: this.props.firstCosmic,\n    //   moonInfo: this.props.firstMoon,\n    //   weatherInfo: this.props.firstWeather\n    // });\n  }\n\n  render() {\n    console.log('inside of today', this.props);\n    return (\n      <div className=\"today-container\">\n        <div className=\"todayBackground\" />\n        {/* cosmic */}\n        {/* seeds pending */}\n        <div className=\"cosmic-container\">\n          {this.state.cosmicShowing ? (\n            <div className=\"today-stats\" onClick={this.handleClickCosmic}>\n              <p>{this.props.firstCosmic.name}</p>\n              {/* <p>{this.props.firstCosmic.}</p> */}\n              {/* <Link to=\"/cosmic-calendar\">Cosmic Calendar</Link> */}\n            </div>\n          ) : (\n            <img\n              src={require('../../shooting_star.png')}\n              onClick={this.handleClickCosmic}\n            />\n          )}\n        </div>\n\n        {/* moon */}\n        <div className=\"moon-container\">\n          {this.state.moonShowing ? (\n            <div className=\"today-stats\" onClick={this.handleClickMoon}>\n              <p>{this.props.firstMoon.name}</p>\n              {/* <Link to=\"/moon-calendar\">Moon Calendaer</Link> */}\n            </div>\n          ) : (\n            <img\n              className=\"moon\"\n              src={require('../../moon.png')}\n              onClick={this.handleClickMoon}\n            />\n          )}\n        </div>\n\n        {/* weather */}\n        <div className=\"weather-container\">\n          {console.log(this.state.weatherInfo)}\n          {this.state.weatherShowing ? (\n            <div className=\"today-stats\" onClick={this.handleClickWeather}>\n              <p>{this.props.firstWeather.weather}</p>\n              {/* <Link to=\"/weather-calendar\">Weather Calendar</Link> */}\n            </div>\n          ) : (\n            <img\n              src={require('../../umbrella.png')}\n              onClick={this.handleClickWeather}\n            />\n          )}\n        </div>\n        <Link to=\"/all-calendar\">Calendar</Link>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { usernameInput: '', passwordInput: '' };\n  }\n\n  handleChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value})\n      // this.setState({usernameInput: 'hello' })\n      // this is what this line evaluates to\n  }\n\n  tryToSignUp = (e) =>{\n      e.preventDefault();\n      const uName = this.state.usernameInput;\n      const pWord = this.state.passwordInput;\n    \n      axios.post('http://localhost:5000/api/auth/signup', {\n        username: uName,\n        password: pWord\n      }, {withCredentials: true})\n    .then(()=>{\n      this.props.getUser();\n        this.props.toggleForm('signup');\n    })\n\n  }\n\n  \n\n  render(){\n    console.log(this.state)\n    return(\n      <form onSubmit = {this.tryToSignUp}>\n\n          <h3>Sign up</h3>\n\n          <legend>Username</legend>\n          <input value={this.state.usernameInput}\n            name=\"usernameInput\"\n            onChange={this.handleChange}\n          />\n\n          <legend>Password</legend>\n          <input value={this.state.passwordInput} \n            name=\"passwordInput\"\n            type=\"password\"\n            onChange={this.handleChange}\n          />\n\n\n\n        <button>Submit</button>\n\n      </form>\n    )\n  }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = { usernameInput: '', passwordInput: '' };\n  }\n\n  handleChange = (e) =>{\n      this.setState({[e.target.name]: e.target.value})\n  }\n\n  tryToLogin = (e) =>{\n      e.preventDefault();\n      const uName = this.state.usernameInput;\n      const pWord = this.state.passwordInput;\n    \n      axios.post('http://localhost:5000/api/auth/login', {\n        username: uName,\n        password: pWord\n      }, {withCredentials: true})\n      .then(()=>{\n        this.props.getUser()\n        this.props.toggleForm('login');\n      })\n\n  }\n\n  \n\n  render(){\n    return(\n      <form onSubmit = {this.tryToLogin}>\n\n          <h3>Login</h3>\n\n          <legend>Username</legend>\n          <input value={this.state.usernameInput}\n            name=\"usernameInput\"\n            onChange={this.handleChange}\n          />\n\n          <legend>Password</legend>\n          <input value={this.state.passwordInput} \n            name=\"passwordInput\"\n            onChange={this.handleChange}\n          />\n\n\n\n        <button>Submit</button>\n\n      </form>\n    )\n  }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport '@fullcalendar/timegrid/main.css';\nimport './allCalendar.css';\n\nexport default class AllCalendar extends Component {\n  // calendarComponentRef = React.createRef();\n\n  render() {\n    const sanitizedWeatherEvents = this.props.weatherEvents.map(wEvent => {\n      let oneWeather = {};\n      // let sanitizedDate = wEvent.dateTimeISO.split('T')[0];\n      // oneWeather.date = sanitizedDate;\n      oneWeather.date = wEvent.dateTimeISO;\n      oneWeather.title = wEvent.weather;\n      return oneWeather;\n    });\n\n    const sanitizedMoonEvents = this.props.moonEvents.map(mEvent => {\n      let oneMoon = {};\n      oneMoon.date = mEvent.dateTimeISO;\n      oneMoon.title = mEvent.name;\n      return oneMoon;\n    });\n\n    const sanitizedCosmicEvents = this.props.cosmicEvents.map(cEvent => {\n      let oneCosmic = {};\n      oneCosmic.date = cEvent.date;\n      oneCosmic.name = cEvent.name;\n      return oneCosmic;\n    });\n\n    const allSanitizedEvents = [\n      ...sanitizedWeatherEvents,\n      ...sanitizedMoonEvents,\n      ...sanitizedCosmicEvents\n    ];\n    console.log('@@@@', allSanitizedEvents);\n\n    // MUST FIX HANDLE DATE CLICK EX:\n    // handleDateClick = () => {\n    //   if ('Would you like to add an event to ' + arg.dateStr + ' ?') {\n    //     this.setState({\n    //       // add new event data\n    //       calendarEvents: this.state.calendarEvents.concat({\n    //         // creates a new array\n    //         title: 'New Event',\n    //         start: arg.date,\n    //         allDay: arg.allDay\n    //       })\n    //     });\n    //   }\n    // };\n\n    return (\n      <div>\n        <FullCalendar\n          defaultView=\"dayGridMonth\"\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n          // editable={true}\n          weekends={true}\n          header={{\n            left: 'prev,next,today',\n            center: 'title',\n            right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n          }}\n          // ref={this.calendarComponentRef}\n          // dateClick={this.handleDateClick}\n          // events={[{ sanitizedWeatherEvents }, { sanitizedMoonEvents }]}\n          events={allSanitizedEvents}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Route, Switch, Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport Home from './components/home/Home.js';\nimport Navbar from './components/navbar/Navbar.js';\nimport Today from './components/today/Today';\nimport Signup from './components/signup/Signup.js';\nimport Login from './components/login/Login.js';\nimport AllCalendar from './components/all-calendar/AllCalendar.js';\nimport './App.css';\n// import MoonCalendar from './components/moon-calendar/MoonCalendar.js';\n// import WeatherCalendar from './components/weather-calendar/WeatherCalendar.js';\n// import CosmicCalendar from './components/cosmic-calendar/CosmicCalendar.js';\n// import Moment from 'react-moment';\n\n// to-do:\n// -redirect mooncal/access to logged in users only\n// make api call blank date to blank date, from - to\n// put the events in appropriate time box (\"sort events into cal\"),\n//connect seeds to cosmic events\n// calculate moon phases (based off current api structure)\n//add eyes that follow cursor\n\nclass App extends React.Component {\n  state = {\n    currentlyLoggedIn: null,\n    ready: false,\n    signupShowing: false,\n    loginShowing: false,\n    cosmicInfo: [],\n    moonInfo: [],\n    weatherInfo: []\n  };\n\n  month = async () => {\n    let result = await axios.get('http://localhost:5000/allCallsForMonth');\n    return result.data;\n  };\n\n  // Sign up/log in\n  getCurrentlyLoggedInUser = () => {\n    console.log('FETCHING USER!!!!');\n    axios\n      .get('http://localhost:5000/api/auth/getcurrentuser', {\n        withCredentials: true\n      })\n      .then(response => {\n        console.log('yay really fetching the user now');\n        let theUser = response.data;\n        this.setState({ currentlyLoggedIn: theUser, ready: true });\n        return theUser;\n      })\n      .catch(() => {\n        this.setState({ currentlyLoggedIn: null });\n      });\n  };\n\n  toggleForm = whichForm => {\n    let theForm;\n\n    if (whichForm === 'signup') {\n      theForm = 'signupShowing';\n    } else {\n      theForm = 'loginShowing';\n    }\n\n    this.setState({ [theForm]: !this.state[theForm] });\n  };\n\n  async componentDidMount() {\n    let apiResults = await this.month();\n    console.log('should get:', apiResults);\n    this.setState({\n      cosmicInfo: apiResults.cosmic,\n      moonInfo: apiResults.moon,\n      weatherInfo: apiResults.weather\n    });\n    // this.fetchEvents();\n    this.getCurrentlyLoggedInUser();\n  }\n\n  logout = () => {\n    axios\n      .post(\n        'http://localhost:5000/api/auth/logout',\n        {},\n        { withCredentials: true }\n      )\n      .then(response => {\n        console.log(response);\n        this.getCurrentlyLoggedInUser();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  // if I want a search a bar this is where the function would go\n\n  render() {\n    console.log('*************', this.state);\n\n    return (\n      <div>\n        <div>\n          <Navbar\n            theUser={this.state.currentlyLoggedIn}\n            pleaseLogOut={this.logout}\n            toggleForm={this.toggleForm}\n            getUser={this.getCurrentlyLoggedInUser}\n          />\n\n          {this.state.signupShowing && (\n            <Signup\n              getUser={this.getCurrentlyLoggedInUser}\n              toggleForm={this.toggleForm}\n            />\n          )}\n\n          {this.state.loginShowing && (\n            <Login\n              getUser={this.getCurrentlyLoggedInUser}\n              toggleForm={this.toggleForm}\n            />\n          )}\n        </div>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={props => (\n              <Today\n                firstCosmic={this.state.cosmicInfo[0]}\n                firstMoon={this.state.moonInfo[0]}\n                firstWeather={this.state.weatherInfo[0]}\n                ready={this.state.ready}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/home\"\n            render={props => (\n              <Home\n                // user events/ profile (two CRUDS)\n                ready={this.state.ready}\n                theUser={this.state.currentlyLoggedIn}\n              />\n            )}\n          />\n\n          {/* <Route\n            exact\n            path=\"/moon-calendar\"\n            render={() => (\n              <MoonCalendar\n                // look at endpoint docs for specific date query yay\n                currentlyLoggedIn={this.state.currentlyLoggedIn}\n                moonEvents={this.state.moonInfo}\n              />\n            )}\n          /> */}\n\n          {/* <Route\n            exact\n            path=\"/cosmic-calendar\"\n            render={() => (\n              <CosmicCalendar\n                currentlyLoggedIn={this.state.currentlyLoggedIn}\n                cosmicEvents={this.state.cosmicInfo}\n              />\n            )}\n          /> */}\n\n          {/* <Route\n            exact\n            path=\"/weather-calendar\"\n            render={() => (\n              <WeatherCalendar\n                currentlyLoggedIn={this.state.currentlyLoggedIn}\n                weatherEvents={this.state.weatherInfo}\n              />\n            )}\n          /> */}\n          <Route\n            exact\n            path=\"/all-calendar\"\n            render={() => (\n              <AllCalendar\n                currentlyLoggedIn={this.state.currentlyLoggedIn}\n                weatherEvents={this.state.weatherInfo}\n                moonEvents={this.state.moonInfo}\n                cosmicEvents={this.state.cosmicInfo}\n                ready={this.state.ready}\n                theUser={this.state.currentlyLoggedIn}\n              />\n            )}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import 'bootstrap/dist/css/bootstrap.css';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}