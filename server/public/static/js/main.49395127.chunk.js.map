{"version":3,"sources":["shooting_star.png","moon.png","umbrella.png","components/navbar/Navbar.js","components/today/Today.js","components/signup/Signup.js","components/login/Login.js","components/all-calendar/AllCalendar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","react_default","a","createElement","theUser","react_router_dom","to","style","textDecoration","margin","onClick","toggleForm","pleaseLogOut","className","username","Today","state","cosmicShowing","moonShowing","weatherShowing","handleClickCosmic","_this","setState","handleClickMoon","handleClickWeather","console","log","this","firstCosmic","name","src","require","firstMoon","weatherInfo","firstWeather","weather","Component","Signup","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","defineProperty","target","value","tryToSignUp","preventDefault","uName","usernameInput","pWord","passwordInput","axios","post","concat","process","password","withCredentials","then","getUser","onSubmit","onChange","type","Login","tryToLogin","AllCalendar","eventFormShowing","eventTitle","eventDate","eventTime","userEvents","_callee","regenerator_default","wrap","_context","prev","next","get","sent","stop","_this2","sanitizedWeatherEvents","weatherEvents","map","wEvent","oneWeather","dateTimeISO","date","title","sanitizedMoonEvents","moonEvents","mEvent","oneMoon","sanitizedCosmicEvents","cosmicEvents","cEvent","oneCosmic","startDate","allSanitizedEvents","toConsumableArray","userEvent","titleInput","dateInput","placeholder","timeInput","main_esm","defaultView","plugins","dayGridPlugin","timeGridPlugin","interactionPlugin","weekends","header","left","center","right","events","App","currentlyLoggedIn","ready","signupShowing","loginShowing","cosmicInfo","moonInfo","month","result","abrupt","data","getCurrentlyLoggedInUser","response","catch","whichForm","theForm","logout","err","apiResults","cosmic","moon","navbar_Navbar","signup_Signup","login_Login","react_router","exact","path","render","Today_Today","AllCalendar_AllCalendar","React","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.49395127.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shooting_star.640ecd65.png\";","module.exports = __webpack_public_path__ + \"static/media/moon.c3d8c7af.png\";","module.exports = __webpack_public_path__ + \"static/media/umbrella.34bc96c8.png\";","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport './navbar.css';\n\nfunction Navbar(props) {\n  const doTheLogout = () => {\n    props.pleaseLogOut();\n  };\n\n  return (\n    <nav>\n      {props.theUser && (\n        <Link to=\"/\" style={{ textDecoration: 'none', margin: '10px' }}>\n          <button>Home</button>\n        </Link>\n      )}\n\n      {!props.theUser && (\n        <span>\n          <button onClick={() => props.toggleForm('login')}> Login </button>\n          <button onClick={() => props.toggleForm('signup')}>Sign Up</button>\n        </span>\n      )}\n\n      {props.theUser && (\n        <span>\n          <Link to=\"/\" onClick={doTheLogout}>\n            <button>Log Out</button>\n          </Link>\n\n          <span className=\"welcome-greetings\">\n            Hello, {props.theUser.username}\n          </span>\n        </span>\n      )}\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './today.css';\n\nexport default class Today extends Component {\n  state = {\n    cosmicShowing: false,\n    moonShowing: false,\n    weatherShowing: false\n  };\n\n  // on toggle show info functions NOT DRY\n  handleClickCosmic = () => {\n    this.setState({\n      cosmicShowing: !this.state.cosmicShowing\n    });\n  };\n\n  handleClickMoon = () => {\n    this.setState({\n      moonShowing: !this.state.moonShowing\n    });\n  };\n\n  handleClickWeather = () => {\n    this.setState({\n      weatherShowing: !this.state.weatherShowing\n    });\n  };\n\n  componentDidMount() {\n    // this.setState({\n    //   cosmicInfo: this.props.firstCosmic,\n    //   moonInfo: this.props.firstMoon,\n    //   weatherInfo: this.props.firstWeather\n    // });\n  }\n\n  render() {\n    console.log('inside of today', this.props);\n    console.log('6666666666', this.props.firstCosmic);\n    return (\n      <div className=\"today-container\">\n        <div className=\"calbtn\">\n          <Link to=\"/all-calendar\">\n            <button>Calendar</button>\n          </Link>\n        </div>\n        <div className=\"todayBackground\" />\n        {/* cosmic */}\n        <div className=\"cosmic-container\">\n          {this.state.cosmicShowing ? (\n            <div className=\"today-stats\" onClick={this.handleClickCosmic}>\n              <p>{this.props.firstCosmic.name}</p>\n              {/* <p>{this.props.firstCosmic.}</p> */}\n            </div>\n          ) : (\n            <img\n              src={require('../../shooting_star.png')}\n              onClick={this.handleClickCosmic}\n            />\n          )}\n        </div>\n\n        {/* moon */}\n        <div className=\"moon-container\">\n          {this.state.moonShowing ? (\n            <div className=\"today-stats\" onClick={this.handleClickMoon}>\n              <p>{this.props.firstMoon.name}</p>\n            </div>\n          ) : (\n            <img\n              className=\"moon\"\n              src={require('../../moon.png')}\n              onClick={this.handleClickMoon}\n            />\n          )}\n        </div>\n\n        {/* weather */}\n        <div className=\"weather-container\">\n          {console.log(this.state.weatherInfo)}\n          {this.state.weatherShowing ? (\n            <div className=\"today-stats\" onClick={this.handleClickWeather}>\n              <p>{this.props.firstWeather.weather}</p>\n            </div>\n          ) : (\n            <img\n              src={require('../../umbrella.png')}\n              onClick={this.handleClickWeather}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './signup.css';\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { usernameInput: '', passwordInput: '' };\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n    // this.setState({usernameInput: 'hello' })\n    // this is what this line evaluates to\n  };\n\n  tryToSignUp = e => {\n    e.preventDefault();\n    const uName = this.state.usernameInput;\n    const pWord = this.state.passwordInput;\n\n    axios\n      .post(\n        `${process.env.REACT_APP_BASE}/api/auth/signup`,\n        {\n          username: uName,\n          password: pWord\n        },\n        { withCredentials: true }\n      )\n      .then(() => {\n        this.props.getUser();\n        this.props.toggleForm('signup');\n      });\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <form onSubmit={this.tryToSignUp}>\n        <h3>Sign up</h3>\n\n        <legend>Username</legend>\n        <input\n          value={this.state.usernameInput}\n          name=\"usernameInput\"\n          onChange={this.handleChange}\n        />\n\n        <legend>Password</legend>\n        <input\n          value={this.state.passwordInput}\n          name=\"passwordInput\"\n          type=\"password\"\n          onChange={this.handleChange}\n        />\n\n        <button>Submit</button>\n      </form>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { usernameInput: '', passwordInput: '' };\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  tryToLogin = e => {\n    e.preventDefault();\n    const uName = this.state.usernameInput;\n    const pWord = this.state.passwordInput;\n\n    axios\n      .post(\n        `${process.env.REACT_APP_BASE}/api/auth/login`,\n        {\n          username: uName,\n          password: pWord\n        },\n        { withCredentials: true }\n      )\n      .then(() => {\n        this.props.getUser();\n        this.props.toggleForm('login');\n      });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.tryToLogin}>\n        <h3>Login</h3>\n\n        <legend>Username</legend>\n        <input\n          value={this.state.usernameInput}\n          name=\"usernameInput\"\n          onChange={this.handleChange}\n        />\n\n        <legend>Password</legend>\n        <input\n          value={this.state.passwordInput}\n          name=\"passwordInput\"\n          onChange={this.handleChange}\n        />\n\n        <button>Submit</button>\n      </form>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport axios from 'axios';\nimport '@fullcalendar/timegrid/main.css';\nimport './allCalendar.css';\n\nexport default class AllCalendar extends Component {\n  state = {\n    eventFormShowing: false,\n    eventTitle: '',\n    eventDate: '',\n    eventTime: ''\n  };\n  // eventClick = info => {\n  //   console.dir(info.event.title);\n  //   alert('you clicked on boring old me');\n  // };\n\n  userEvents = async () => {\n    let result = await axios.get(`${process.env.REACT_APP_BASE}/userEvent`);\n    // return result.data;\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  async componentDidMount() {\n    let userEvents = this.userEvents();\n  }\n\n  render() {\n    const sanitizedWeatherEvents = this.props.weatherEvents.map(wEvent => {\n      let oneWeather = {};\n      console.log(wEvent.dateTimeISO);\n      oneWeather.date = wEvent.dateTimeISO;\n      oneWeather.title = wEvent.weather;\n      return oneWeather;\n    });\n\n    const sanitizedMoonEvents = this.props.moonEvents.map(mEvent => {\n      let oneMoon = {};\n      // console.log('88888', mEvent.dateTimeISO);\n      oneMoon.date = mEvent.dateTimeISO;\n      oneMoon.title = mEvent.name;\n      return oneMoon;\n    });\n\n    const sanitizedCosmicEvents = this.props.cosmicEvents.map(cEvent => {\n      let oneCosmic = {};\n      console.log('333333333333333!!!!!!', this.props.cosmicEvents);\n      console.log(cEvent.startDate);\n      oneCosmic.date = cEvent.startDate;\n      oneCosmic.name = cEvent.name;\n      return oneCosmic;\n    });\n\n    const allSanitizedEvents = [\n      ...sanitizedWeatherEvents,\n      ...sanitizedMoonEvents,\n      ...sanitizedCosmicEvents\n    ];\n\n    // console.log('&&&&&&', sanitizedCosmicEvents);\n    console.log('@@@@', allSanitizedEvents);\n\n    const addEvent = () => {\n      // console.log('@@@@@@@@@@@@@@@', this.state.eventFormShowing);\n      this.setState({\n        eventFormShowing: !this.state.eventFormShowing\n      });\n    };\n\n    return (\n      <div className=\"fullCal\">\n        {/* USER ADDING EVENT */}\n        <button onClick={addEvent}>Add Event</button>\n        {this.state.eventFormShowing && (\n          <div className=\"Modal\">\n            <form onSubmit={this.userEvent}>\n              <h3>Add Event</h3>\n\n              <legend>Title</legend>\n              <input\n                value={this.state.titleInput}\n                name=\"eventTitle\"\n                onChange={this.handleChange}\n              />\n\n              <legend>Date</legend>\n              <input\n                value={this.state.dateInput}\n                name=\"eventDate\"\n                placeholder=\"YYYY-MM-DD\"\n                onChange={this.handleChange}\n              />\n\n              <legend>Time</legend>\n              <input\n                value={this.state.timeInput}\n                name=\"eventTime\"\n                onChange={this.handleChange}\n              />\n              <button>Submit</button>\n            </form>\n          </div>\n        )}\n        <FullCalendar\n          defaultView=\"dayGridMonth\"\n          plugins={[dayGridPlugin, timeGridPlugin, interactionPlugin]}\n          // editable={true}\n          weekends={true}\n          header={{\n            left: 'prev,next,today',\n            center: 'title',\n            right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n          }}\n          // eventClick={this.eventClick}\n          events={allSanitizedEvents}\n        />\n        <div />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Route, Switch, Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport Home from './components/home/Home.js';\nimport Navbar from './components/navbar/Navbar.js';\nimport Today from './components/today/Today';\nimport Signup from './components/signup/Signup.js';\nimport Login from './components/login/Login.js';\nimport AllCalendar from './components/all-calendar/AllCalendar.js';\nimport './App.css';\n// import Moment from 'react-moment';\n\nclass App extends React.Component {\n  state = {\n    currentlyLoggedIn: null,\n    ready: false,\n    signupShowing: false,\n    loginShowing: false,\n    cosmicInfo: [],\n    moonInfo: [],\n    weatherInfo: []\n  };\n\n  month = async () => {\n    let result = await axios.get(\n      `${process.env.REACT_APP_BASE}/allCallsForMonth`\n    );\n    return result.data;\n    console.log(result.data, '222222222');\n  };\n\n  // Sign up/log in\n  getCurrentlyLoggedInUser = () => {\n    console.log('FETCHING USER!!!!');\n    axios\n      .get(`${process.env.REACT_APP_BASE}/api/auth/getcurrentuser`, {\n        withCredentials: true\n      })\n      .then(response => {\n        // console.log('yay really fetching the user now');\n        let theUser = response.data;\n        this.setState({ currentlyLoggedIn: theUser, ready: true });\n      })\n      .catch(() => {\n        this.setState({ currentlyLoggedIn: null });\n      });\n  };\n\n  toggleForm = whichForm => {\n    let theForm;\n\n    if (whichForm === 'signup') {\n      theForm = 'signupShowing';\n    } else {\n      theForm = 'loginShowing';\n    }\n\n    this.setState({ [theForm]: !this.state[theForm] });\n  };\n\n  async componentDidMount() {\n    let apiResults = await this.month();\n    console.log('should get:', apiResults);\n    this.setState({\n      cosmicInfo: apiResults.cosmic,\n      moonInfo: apiResults.moon,\n      weatherInfo: apiResults.weather\n    });\n    // this.fetchEvents();\n    this.getCurrentlyLoggedInUser();\n  }\n\n  logout = () => {\n    axios\n      .post(\n        `${process.env.REACT_APP_BASE}/api/auth/logout`,\n        {},\n        { withCredentials: true }\n      )\n      .then(response => {\n        console.log(response);\n        this.getCurrentlyLoggedInUser();\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  // if I want a search a bar this is where the function would go\n\n  render() {\n    console.log('*************', this.state);\n\n    return (\n      <div>\n        <div>\n          <Navbar\n            theUser={this.state.currentlyLoggedIn}\n            pleaseLogOut={this.logout}\n            toggleForm={this.toggleForm}\n            getUser={this.getCurrentlyLoggedInUser}\n          />\n\n          {this.state.signupShowing && (\n            <Signup\n              getUser={this.getCurrentlyLoggedInUser}\n              toggleForm={this.toggleForm}\n            />\n          )}\n\n          {this.state.loginShowing && (\n            <Login\n              getUser={this.getCurrentlyLoggedInUser}\n              toggleForm={this.toggleForm}\n            />\n          )}\n        </div>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={props => (\n              <Today\n                firstCosmic={this.state.cosmicInfo[0]}\n                firstMoon={this.state.moonInfo[0]}\n                firstWeather={this.state.weatherInfo[0]}\n                ready={this.state.ready}\n              />\n            )}\n          />\n          {/* \n          <Route\n            exact\n            path=\"/home\"\n            render={props => (\n              <Home\n                // user events/ profile (two CRUDS)\n                ready={this.state.ready}\n                theUser={this.state.currentlyLoggedIn}\n              />\n            )}\n          /> */}\n\n          <Route\n            exact\n            path=\"/all-calendar\"\n            render={() => {\n              if (this.state.currentlyLoggedIn)\n                return (\n                  <AllCalendar\n                    currentlyLoggedIn={this.state.currentlyLoggedIn}\n                    weatherEvents={this.state.weatherInfo}\n                    moonEvents={this.state.moonInfo}\n                    cosmicEvents={this.state.cosmicInfo}\n                    ready={this.state.ready}\n                    theUser={this.state.currentlyLoggedIn}\n                  />\n                );\n              else return <Redirect to=\"/\" />;\n            }}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import 'bootstrap/dist/css/bootstrap.css';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}